#!/usr/bin/bash

APACHE_CONFIG=/etc/httpd/conf.d/ironic-inspector.conf

export IRONIC_INSPECTOR_CERT_FILE=/certs/ironic-inspector/tls.crt
export IRONIC_INSPECTOR_KEY_FILE=/certs/ironic-inspector/tls.key
export INSPECTOR_REVERSE_PROXY_SETUP=${INSPECTOR_REVERSE_PROXY_SETUP:-"false"}

if [ -f "$IRONIC_INSPECTOR_CERT_FILE" ] && [ ! -f "$IRONIC_INSPECTOR_KEY_FILE" ] ; then
    echo "Missing TLS Certificate key file /certs/ironic-inspector/tls.key"
    exit 1
fi
if [ ! -f "$IRONIC_INSPECTOR_CERT_FILE" ] && [ -f "$IRONIC_INSPECTOR_KEY_FILE" ] ; then
    echo "Missing TLS Certificate file /certs/ironic-inspector/tls.crt"
    exit 1
fi

if [ -f "$IRONIC_INSPECTOR_CERT_FILE" ]; then
    export IRONIC_INSPECTOR_TLS_SETUP="true"
else
    export IRONIC_INSPECTOR_TLS_SETUP="false"
    export INSPECTOR_REVERSE_PROXY_SETUP="false" # If TLS is not used, we have no reason to use the reverse proxy
    exit 0
fi

function build_j2_config() {
  CONFIG_FILE=$1
python3 -c 'import os; import sys; import jinja2; sys.stdout.write(jinja2.Template(sys.stdin.read()).render(env=os.environ))' < $CONFIG_FILE.j2
}

# Configure HTTP basic auth for API server
HTPASSWD_FILE=/etc/ironic-inspector/htpasswd
if [ -n "${HTTP_BASIC_HTPASSWD}" ]; then
    printf "%s\n" "${HTTP_BASIC_HTPASSWD}" >"${HTPASSWD_FILE}"
fi

build_j2_config $APACHE_CONFIG > $APACHE_CONFIG
sed -i "/Listen 80/c\#Listen 80" /etc/httpd/conf/httpd.conf
sed -i 's/User apache/User ironic-inspector/g' /etc/httpd/conf/httpd.conf
sed -i 's/Group apache/Group ironic-inspector/g' /etc/httpd/conf/httpd.conf
exec /usr/sbin/httpd -DFOREGROUND

